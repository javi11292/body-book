{"version":3,"sources":["libraries/store.js","hooks/useStore.js","libraries/fetch.js","components/Notifications/useLogic.js","components/Notifications/styled.js","components/Notifications/index.js","components/App/useLogic.js","components/App/styled.js","components/Main/useLogic.js","components/Main/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["getStore","state","store","listeners","update","key","value","this","forEach","callback","addListener","Set","add","removeListener","delete","size","subscribe","useReducer","forceUpdate","useEffect","useCallback","field","reducer","logged","undefined","notifications","action","type","slice","host","process","post","path","body","a","fetch","credentials","method","headers","JSON","stringify","response","ok","error","statusText","text","parse","message","get","useLogic","useState","open","setOpen","useStore","setNotifications","length","notification","handleClose","handleExited","SnackbarContent","styled","variant","props","theme","backgroundColor","palette","dark","primary","Notifications","Snackbar","onClose","onExited","autoHideDuration","setUpdate","detail","postMessage","window","location","reload","addEventListener","removeEventListener","shouldUpdate","Box","height","width","position","history","useHistory","setLogged","sessionStorage","getItem","push","removeItem","checkSession","login","register","home","Login","React","lazy","Register","Home","Main","to","createMuiTheme","spacing","factor","App","CssBaseline","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","onClick","color","basename","fallback","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","href","origin","contentType","status","indexOf","ready","unregister","checkValidServiceWorker","dispatchEvent","CustomEvent","waiting"],"mappings":"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","file":"static/js/main.5fd8fd06.chunk.js","sourcesContent":["import { useReducer, useEffect, useCallback } from \"react\"\n\nfunction getStore(state) {\n  const store = {\n    state,\n    listeners: {},\n\n    update(key, value) {\n      if (this.state[key].value === value) return\n      this.state[key].value = value\n      this.listeners[key].forEach(callback => callback())\n    },\n\n    addListener(key, callback) {\n      if (!this.listeners[key]) {\n        this.listeners[key] = new Set()\n      }\n      this.listeners[key].add(callback)\n    },\n\n    removeListener(key, callback) {\n      this.listeners[key].delete(callback)\n      if (!this.listeners[key].size()) delete this.listeners[key]\n    },\n  }\n\n  return (key, subscribe = true) => {\n    const [, forceUpdate] = useReducer(state => !state, false)\n\n    useEffect(() => {\n      if (!subscribe) return\n      store.addListener(key, forceUpdate)\n      return () => store.removeListener(key, forceUpdate)\n    }, [key, subscribe])\n\n    const update = useCallback(value => {\n      const field = store.state[key]\n      store.update(key, field.reducer(field.value, value))\n    }, [key])\n\n    return subscribe ? [store.state[key].value, update] : update\n  }\n}\n\nexport default getStore","import getStore from \"libraries/store\"\n\nexport default getStore({\n  logged: {\n    value: undefined,\n    reducer: (state, value) => value,\n  },\n  notifications: {\n    value: [],\n    reducer: (state, { action, value, type }) => {\n      switch (action) {\n        case \"add\":\n          return [...state, { value, type }]\n        case \"remove\":\n          return state.slice(0, -1)\n        default:\n          return state\n      }\n    },\n  }\n})","const host = process.env[process.env.NODE_ENV === \"development\" ? \"REACT_APP_SERVER_DEV\" : \"REACT_APP_SERVER\"]\n\nexport async function post(path, body) {\n  try {\n    const response = await fetch(`${host}${path}`, {\n      credentials: \"include\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(body),\n    })\n\n    if (!response.ok) return { error: response.statusText }\n\n    const text = await response.text()\n    try {\n      return JSON.parse(text)\n    } catch {\n      return text\n    }\n  } catch (error) {\n    return { error: error.message }\n  }\n}\n\nexport async function get(path) {\n  try {\n    const response = await fetch(`${host}${path}`, {\n      credentials: \"include\",\n    })\n\n    if (!response.ok) return { error: response.statusText }\n\n    const text = await response.text()\n    try {\n      return JSON.parse(text)\n    } catch {\n      return text\n    }\n  } catch (error) {\n    return { error: error.message }\n  }\n}","import { useState, useEffect } from \"react\"\nimport useStore from \"hooks/useStore\"\n\nfunction useLogic() {\n  const [open, setOpen] = useState(false)\n  const [notifications, setNotifications] = useStore(\"notifications\")\n\n  useEffect(() => {\n    setOpen(notifications.length > 0)\n  }, [notifications])\n\n  function handleClose() {\n    setOpen(false)\n  }\n\n  function handleExited() {\n    setNotifications({ action: \"remove\" })\n  }\n\n  return { notification: notifications[0], handleClose, handleExited, open }\n}\n\nexport default useLogic","import React from \"react\"\nimport { styled, SnackbarContent as CoreSnackbarContent } from \"@material-ui/core\"\n\n/**\n * @typedef {Object} SnackbarContentProps\n * @property {\"error\" | \"message\"} variant\n */\n\nexport const SnackbarContent = styled(\n  /**\n   * @param {import(\"@material-ui/core/SnackbarContent\").SnackbarContentProps & SnackbarContentProps} props \n   */\n  function SnackbarContent({ variant, ...props }) {\n    return <CoreSnackbarContent {...props} />\n  }\n)(({ theme, variant = \"message\" }) => ({\n  backgroundColor: variant === \"error\" ? theme.palette.error.dark : theme.palette.primary.dark\n})) ","import React from \"react\"\nimport { Snackbar } from \"@material-ui/core\"\nimport useLogic from \"./useLogic\"\nimport { SnackbarContent } from \"./styled\"\n\nfunction Notifications() {\n  const { notification = {}, handleClose, handleExited, open } = useLogic()\n\n  return (\n    <Snackbar\n      open={open}\n      onClose={handleClose}\n      onExited={handleExited}\n      autoHideDuration={2000}>\n      <SnackbarContent\n        variant={notification.type}\n        message={notification.value} />\n    </Snackbar>\n  )\n}\n\nexport default Notifications","import { useState, useEffect } from \"react\"\n\nfunction useLogic() {\n  const [update, setUpdate] = useState()\n\n  useEffect(() => {\n    function callback({ detail }) {\n      setUpdate(() => () => {\n        detail.postMessage({ type: \"SKIP_WAITING\" })\n        window.location.reload()\n      })\n    }\n\n    window.addEventListener(\"update\", callback)\n\n    return () => window.removeEventListener(\"update\", callback)\n  }, [])\n\n  function handleClose(shouldUpdate) {\n    return () => {\n      if (shouldUpdate) {\n        update()\n      } else {\n        setUpdate()\n      }\n    }\n  }\n\n  return { update, handleClose }\n}\n\nexport default useLogic","import { styled } from \"@material-ui/core\"\n\nexport const Box = styled(\"div\")({\n  height: \"100vh\",\n  width: \"100vw\",\n  position: \"absolute\",\n})","import { useEffect } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { get } from \"libraries/fetch\"\nimport useStore from \"hooks/useStore\"\n\nfunction useLogic() {\n  const history = useHistory()\n  const [logged, setLogged] = useStore(\"logged\")\n\n  useEffect(() => {\n    const location = sessionStorage.getItem(\"location\")\n    if (location) {\n      history.push(location)\n      sessionStorage.removeItem(\"location\")\n    }\n  }, [history])\n\n  useEffect(() => {\n    async function checkSession() {\n      const { logged } = await get(\"/status\")\n      setLogged(!!logged)\n    }\n\n    checkSession()\n\n    function callback({ detail }) {\n      setLogged(detail)\n    }\n\n    window.addEventListener(\"status\", callback)\n\n    return () => window.removeEventListener(\"status\", callback)\n  }, [setLogged])\n\n  return { logged }\n}\n\nexport default useLogic","import React from \"react\"\nimport { Switch, Route, Redirect } from \"react-router-dom\"\nimport useLogic from \"./useLogic\"\n\nconst login = import(\"pages/Login\")\nconst register = import(\"pages/Register\")\nconst home = import(\"pages/Home\")\n\nconst Login = React.lazy(() => login)\nconst Register = React.lazy(() => register)\nconst Home = React.lazy(() => home)\n\nfunction Main() {\n  const { logged } = useLogic()\n\n  if (logged === undefined) return null\n\n  return (\n    <Switch>\n      <Route path=\"/login\">\n        {logged && <Redirect to=\"/\" />}\n        <Login />\n      </Route>\n      <Route path=\"/register\">\n        {logged && <Redirect to=\"/\" />}\n        <Register />\n      </Route>\n      <Route>\n        {!logged && <Redirect to=\"/login\" />}\n        <Home />\n      </Route>\n    </Switch>\n  )\n}\n\nexport default Main","import React, { Suspense } from \"react\"\nimport {\n  createMuiTheme,\n  MuiThemeProvider,\n  CssBaseline,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n} from \"@material-ui/core\"\nimport { BrowserRouter } from \"react-router-dom\"\nimport Notifications from \"components/Notifications\"\nimport useLogic from \"./useLogic\"\nimport { Box } from \"./styled\"\nimport Main from \"components/Main\"\n\nconst theme = createMuiTheme({\n  spacing: factor => `${0.5 * factor}rem`,\n})\n\nfunction App() {\n  const { update, handleClose } = useLogic()\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <Dialog onClose={handleClose} open={!!update}>\n        <DialogTitle>Nueva versión disponible</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>Pulsa \"Actualizar\" para aplicar los cambios</DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={handleClose(false)} color=\"secondary\">Cancelar</Button>\n          <Button onClick={handleClose(true)} color=\"primary\">Actualizar</Button>\n        </DialogActions>\n      </Dialog>\n\n      <Notifications />\n\n      <Box>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <Suspense fallback={null}>\n            <Main />\n          </Suspense>\n        </BrowserRouter>\n      </Box>\n    </MuiThemeProvider>\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"components/App\"\nimport * as serviceWorker from \"serviceWorker\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\nfunction onUpdate(registration) {\n  window.dispatchEvent(new CustomEvent(\"update\", { detail: registration.waiting }))\n}\n\nserviceWorker.register({ onUpdate })"],"sourceRoot":""}