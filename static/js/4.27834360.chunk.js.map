{"version":3,"sources":["components/TextField/index.js","components/Button/index.js","components/index.js","pages/Login/styled.js","pages/Login/useLogic.js","pages/Login/index.js"],"names":["TextField","props","variant","Button","color","styled","CoreButton","margin","theme","spacing","Container","CoreContainer","padding","Title","alignSelf","useLogic","history","useHistory","setNotification","useStore","useState","username","password","confirmPassword","user","setUser","a","post","error","action","value","type","window","dispatchEvent","CustomEvent","detail","message","push","cancel","goBack","navigateToRegister","register","login","handleChange","target","id","Login","maxWidth","container","direction","autoComplete","label","onChange","justify","onClick"],"mappings":"+HAUeA,MAJf,SAAmBC,GACjB,OAAO,kBAAC,IAAD,eAAeC,QAAQ,UAAaD,K,SCG9BE,MAJf,SAAgBF,GACd,OAAO,kBAAC,IAAD,eAAYG,MAAM,WAAcH,KCPzC,qE,iCCAA,6JAIaE,EAASE,YAAOC,IAAPD,EAAmB,kBAAgB,CACvDE,OADuC,EAAGC,MAC5BC,QAAQ,EAAG,OAGdC,EAAYL,YAAOM,IAAPN,EAAsB,kBAAgB,CAC7DO,QAD6C,EAAGJ,MACjCC,QAAQ,OAGZI,EAAQR,aAInB,SAAeJ,GACb,OAAO,kBAAC,IAAD,eAAYC,QAAQ,MAASD,MALnBI,EAOnB,kBAAgB,CAChBE,OADA,EAAGC,MACWC,QAAQ,EAAG,GACzBK,UAAW,c,4UCwCEC,IAxDf,WACE,IAAMC,EAAUC,cACVC,EAAkBC,YAAS,iBAAiB,GAFhC,EAGMC,mBAAS,CAC/BC,SAAU,GACVC,SAAU,GACVC,gBAAiB,KAND,mBAGXC,EAHW,KAGLC,EAHK,iDAiBlB,8BAAAC,EAAA,sEAC0BC,YAAK,SAAU,CACrCN,SAAUG,EAAKH,SACfC,SAAUE,EAAKF,WAHnB,iBACUM,EADV,EACUA,OAMNV,EAAgB,CAAEW,OAAQ,MAAOC,MAAOF,EAAOG,KAAM,UAErDC,OAAOC,cAAc,IAAIC,YAAY,SAAU,CAAEC,QAAQ,KAT7D,4CAjBkB,kEA8BlB,gCAAAT,EAAA,yDACMF,EAAKF,WAAaE,EAAKD,gBAD7B,uBAEIL,EAAgB,CAAEW,OAAQ,MAAOC,MAAO,kCAAgCC,KAAM,UAFlF,0CAMmCJ,YAAK,YAAa,CACjDN,SAAUG,EAAKH,SACfC,SAAUE,EAAKF,WARnB,gBAMUM,EANV,EAMUA,MAAOQ,EANjB,EAMiBA,QAKXR,EACFV,EAAgB,CAAEW,OAAQ,MAAOC,MAAOF,EAAOG,KAAM,WAErDb,EAAgB,CAAEW,OAAQ,MAAOC,MAAOM,IACxCpB,EAAQqB,KAAK,WAfjB,4CA9BkB,sBAqDlB,MAAO,CAAEC,OA5CT,WACEtB,EAAQuB,UA2COC,mBAxCjB,WACExB,EAAQqB,KAAK,cAuCsBI,SArDnB,2CAqD6BC,MArD7B,2CAqDoClB,OAAMmB,aAJ5D,YAAmC,IAAXC,EAAU,EAAVA,OACtBnB,GAAQ,SAAAD,GAAI,O,yVAAA,IAAUA,EAAV,eAAiBoB,EAAOC,GAAKD,EAAOd,e,iCCvDpD,+DAoCegB,UA9Bf,WAAkB,IAAD,EAC2C/B,cAAlDyB,EADO,EACPA,mBAAoBE,EADb,EACaA,MAAOlB,EADpB,EACoBA,KAAMmB,EAD1B,EAC0BA,aAEzC,OACE,kBAAC,IAAD,CAAWI,SAAS,MAClB,kBAAC,IAAD,CAAMC,WAAS,EAACC,UAAU,UACxB,kBAAC,IAAD,cACA,kBAAC,IAAD,CACEC,aAAa,MACbC,MAAM,UACN5C,OAAO,SACPuB,MAAON,EAAKH,SACZ+B,SAAUT,EACVE,GAAG,aACL,kBAAC,IAAD,CACEd,KAAK,WACLoB,MAAM,gBACN5C,OAAO,SACPuB,MAAON,EAAKF,SACZ8B,SAAUT,EACVE,GAAG,aACL,kBAAC,IAAD,CAAMG,WAAS,EAACK,QAAQ,iBACtB,kBAAC,IAAD,CAAQC,QAASd,GAAjB,eACA,kBAAC,IAAD,CAAQc,QAASZ,EAAOxC,QAAQ,aAAhC","file":"static/js/4.27834360.chunk.js","sourcesContent":["import React from \"react\"\nimport { TextField as CoreTextField } from \"@material-ui/core\"\n\n/** \n * @param {import(\"@material-ui/core/TextField\").TextFieldProps} props\n */\nfunction TextField(props) {\n  return <CoreTextField variant=\"filled\" {...props} />\n}\n\nexport default TextField","import React from \"react\"\nimport { Button as CoreButton } from \"@material-ui/core\"\n\n/** \n * @param {import(\"@material-ui/core/Button\").ButtonProps} props\n */\nfunction Button(props) {\n  return <CoreButton color=\"primary\" {...props} />\n}\n\nexport default Button","export { default as TextField } from \"./TextField\"\nexport { default as Button } from \"./Button\"","import React from \"react\"\nimport { styled, Container as CoreContainer, Typography } from \"@material-ui/core\"\nimport { Button as CoreButton } from \"components\"\n\nexport const Button = styled(CoreButton)(({ theme }) => ({\n  margin: theme.spacing(3, 0),\n}))\n\nexport const Container = styled(CoreContainer)(({ theme }) => ({\n  padding: theme.spacing(2),\n}))\n\nexport const Title = styled(\n  /**\n   * @param {import(\"@material-ui/core/Typography\").TypographyProps} props \n   */\n  function Title(props) {\n    return <Typography variant=\"h4\" {...props} />\n  }\n)(({ theme }) => ({\n  margin: theme.spacing(2, 0),\n  alignSelf: \"center\",\n}))","import { useState } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport useStore from \"hooks/useStore\"\nimport { post } from \"libraries/fetch\"\n\nfunction useLogic() {\n  const history = useHistory()\n  const setNotification = useStore(\"notifications\", false)\n  const [user, setUser] = useState({\n    username: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  })\n\n  function cancel() {\n    history.goBack()\n  }\n\n  function navigateToRegister() {\n    history.push(\"/register\")\n  }\n\n  async function login() {\n    const { error } = await post(\"/login\", {\n      username: user.username,\n      password: user.password,\n    })\n\n    if (error) {\n      setNotification({ action: \"add\", value: error, type: \"error\" })\n    } else {\n      window.dispatchEvent(new CustomEvent(\"status\", { detail: true }))\n    }\n  }\n\n  async function register() {\n    if (user.password !== user.confirmPassword) {\n      setNotification({ action: \"add\", value: \"Las contraseñas no coinciden\", type: \"error\" })\n      return\n    }\n\n    const { error, message } = await post(\"/register\", {\n      username: user.username,\n      password: user.password,\n    })\n\n    if (error) {\n      setNotification({ action: \"add\", value: error, type: \"error\" })\n    } else {\n      setNotification({ action: \"add\", value: message })\n      history.push(\"/login\")\n    }\n  }\n\n  function handleChange({ target }) {\n    setUser(user => ({ ...user, [target.id]: target.value }))\n  }\n\n  return { cancel, navigateToRegister, register, login, user, handleChange }\n}\n\nexport default useLogic","import React from \"react\"\nimport { Grid } from \"@material-ui/core\"\nimport { TextField } from \"components\"\nimport { Button, Container, Title } from \"./styled\"\nimport useLogic from \"./useLogic\"\n\nfunction Login() {\n  const { navigateToRegister, login, user, handleChange } = useLogic()\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Grid container direction=\"column\">\n        <Title>Login</Title>\n        <TextField\n          autoComplete=\"off\"\n          label=\"Usuario\"\n          margin=\"normal\"\n          value={user.username}\n          onChange={handleChange}\n          id=\"username\" />\n        <TextField\n          type=\"password\"\n          label=\"Contraseña\"\n          margin=\"normal\"\n          value={user.password}\n          onChange={handleChange}\n          id=\"password\" />\n        <Grid container justify=\"space-between\">\n          <Button onClick={navigateToRegister}>Registrarse</Button>\n          <Button onClick={login} variant=\"contained\">Iniciar sesión</Button>\n        </Grid>\n      </Grid>\n    </Container>\n  )\n}\n\nexport default Login"],"sourceRoot":""}